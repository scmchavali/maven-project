<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:json="http://www.mulesoft.org/schema/mule/json"
	xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd">
	<http:listener-config name="HTTP_Listener_Configuration" host="0.0.0.0" port="8081" basePath="transactions" doc:name="HTTP Listener Configuration" />
	<db:mysql-config name="MySQL_Configuration"  doc:name="MySQL Configuration" database="test" host="localhost" password="root" port="3306" user="root"/>
	<flow name="single-resource-transactionFlow">
		<http:listener config-ref="HTTP_Listener_Configuration" path="/single-resource" doc:name="HTTP" allowedMethods="POST"/>
		<json:json-to-object-transformer returnClass="java.util.Map" doc:name="JSON to Object" />
		<set-variable variableName="originalPayload" value="#[payload]" doc:name="savePayload" />
		<transactional action="BEGIN_OR_JOIN" doc:name="insertPayloadInSameTransaction">
            <db:insert config-ref="MySQL_Configuration" autoGeneratedKeys="true" autoGeneratedKeysColumnIndexes="1" doc:name="insertCustomer">
                <db:parameterized-query><![CDATA[INSERT INTO CUSTOMER(NAME,ADDRESS) VALUES(#[payload.customer.name],#[payload.customer.address])]]></db:parameterized-query>
            </db:insert>
            <logger message="On Failure roll back" level="INFO" doc:name="Logger"/>
            <db:insert config-ref="MySQL_Configuration" doc:name="insertOrder">
                <db:parameterized-query><![CDATA[INSERT INTO CUSTOMER_ORDER(ITEM,SHIPPING_ADDRESS,CUSTOMER_ID)
VALUES(#[flowVars.originalPayload.order.item],
#[flowVars.originalPayload.order.shippingAddress],
#[payload[0].generated_key])]]></db:parameterized-query>
            </db:insert>
		</transactional>
		<dw:transform-message doc:name="prepareResponse">
			<dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	"message": "your order has been placed"
} when payload > 0 
otherwise {
	"message": "something wrong went with your order"
}]]></dw:set-payload>
		</dw:transform-message>
        <choice-exception-strategy doc:name="Choice Exception Strategy">
            <catch-exception-strategy when="exception.causedBy(java.sql.SQLException)" doc:name="java.sql.SQLException">
                <set-property propertyName="http.status" value="#[500]" doc:name="500"/>
                <set-payload value="#['{&quot;error&quot;: &quot;Internal Server Error&quot;, &quot;cause&quot;: &quot;' + exception.getMessage() + '&quot;}']" doc:name="internalServerError" mimeType="application/json"/>
            </catch-exception-strategy>
        </choice-exception-strategy>
	</flow>
</mule>